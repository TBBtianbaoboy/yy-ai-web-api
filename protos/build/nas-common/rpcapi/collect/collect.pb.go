// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.18.1
// source: collect/collect.proto

package collect

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CollectAgentBasicInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentIp         string           `protobuf:"bytes,1,opt,name=agent_ip,json=agentIp,proto3" json:"agent_ip,omitempty"`                           //agent ip地址
	AgentHostname   string           `protobuf:"bytes,2,opt,name=agent_hostname,json=agentHostname,proto3" json:"agent_hostname,omitempty"`         //agent hostname
	MacAddress      string           `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`                  //agent mac 地址
	Pid             int64            `protobuf:"varint,5,opt,name=pid,proto3" json:"pid,omitempty"`                                                 //agent pid
	AgentDiskInfo   *AgentDiskInfo   `protobuf:"bytes,6,opt,name=agent_disk_info,json=agentDiskInfo,proto3" json:"agent_disk_info,omitempty"`       //agent 磁盘信息
	AgentSystemInfo *AgentSystemInfo `protobuf:"bytes,7,opt,name=agent_system_info,json=agentSystemInfo,proto3" json:"agent_system_info,omitempty"` //agent 系统信息
	AgentPortInfo   []*AgentPortInfo `protobuf:"bytes,8,rep,name=agent_port_info,json=agentPortInfo,proto3" json:"agent_port_info,omitempty"`       //agent 端口信息
}

func (x *CollectAgentBasicInfoReq) Reset() {
	*x = CollectAgentBasicInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_collect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectAgentBasicInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectAgentBasicInfoReq) ProtoMessage() {}

func (x *CollectAgentBasicInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_collect_collect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectAgentBasicInfoReq.ProtoReflect.Descriptor instead.
func (*CollectAgentBasicInfoReq) Descriptor() ([]byte, []int) {
	return file_collect_collect_proto_rawDescGZIP(), []int{0}
}

func (x *CollectAgentBasicInfoReq) GetAgentIp() string {
	if x != nil {
		return x.AgentIp
	}
	return ""
}

func (x *CollectAgentBasicInfoReq) GetAgentHostname() string {
	if x != nil {
		return x.AgentHostname
	}
	return ""
}

func (x *CollectAgentBasicInfoReq) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *CollectAgentBasicInfoReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *CollectAgentBasicInfoReq) GetAgentDiskInfo() *AgentDiskInfo {
	if x != nil {
		return x.AgentDiskInfo
	}
	return nil
}

func (x *CollectAgentBasicInfoReq) GetAgentSystemInfo() *AgentSystemInfo {
	if x != nil {
		return x.AgentSystemInfo
	}
	return nil
}

func (x *CollectAgentBasicInfoReq) GetAgentPortInfo() []*AgentPortInfo {
	if x != nil {
		return x.AgentPortInfo
	}
	return nil
}

//agent所在主机的系统信息
type AgentSystemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentCpu    float64 `protobuf:"fixed64,2,opt,name=agent_cpu,json=agentCpu,proto3" json:"agent_cpu,omitempty"`          //agent cpu利用率
	CoreCpu     int32   `protobuf:"varint,1,opt,name=core_cpu,json=coreCpu,proto3" json:"core_cpu,omitempty"`              //agent cpu 核数
	AgentMemory float64 `protobuf:"fixed64,3,opt,name=agent_memory,json=agentMemory,proto3" json:"agent_memory,omitempty"` //agent 内存使用率
	TotalMemory uint64  `protobuf:"varint,4,opt,name=total_memory,json=totalMemory,proto3" json:"total_memory,omitempty"`  //agent 主机内存大小
}

func (x *AgentSystemInfo) Reset() {
	*x = AgentSystemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_collect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentSystemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentSystemInfo) ProtoMessage() {}

func (x *AgentSystemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_collect_collect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentSystemInfo.ProtoReflect.Descriptor instead.
func (*AgentSystemInfo) Descriptor() ([]byte, []int) {
	return file_collect_collect_proto_rawDescGZIP(), []int{1}
}

func (x *AgentSystemInfo) GetAgentCpu() float64 {
	if x != nil {
		return x.AgentCpu
	}
	return 0
}

func (x *AgentSystemInfo) GetCoreCpu() int32 {
	if x != nil {
		return x.CoreCpu
	}
	return 0
}

func (x *AgentSystemInfo) GetAgentMemory() float64 {
	if x != nil {
		return x.AgentMemory
	}
	return 0
}

func (x *AgentSystemInfo) GetTotalMemory() uint64 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

//agent所在主机的磁盘信息
type AgentDiskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device      string  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`                                //设备名
	MountPoint  string  `protobuf:"bytes,2,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`      //挂载点
	Fstype      string  `protobuf:"bytes,3,opt,name=fstype,proto3" json:"fstype,omitempty"`                                //文件系统类型
	Options     string  `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`                              //其他信息
	Total       uint64  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`                                 //磁盘总量
	UsedPercent float64 `protobuf:"fixed64,7,opt,name=used_percent,json=usedPercent,proto3" json:"used_percent,omitempty"` //磁盘使用率
}

func (x *AgentDiskInfo) Reset() {
	*x = AgentDiskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_collect_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDiskInfo) ProtoMessage() {}

func (x *AgentDiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_collect_collect_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDiskInfo.ProtoReflect.Descriptor instead.
func (*AgentDiskInfo) Descriptor() ([]byte, []int) {
	return file_collect_collect_proto_rawDescGZIP(), []int{2}
}

func (x *AgentDiskInfo) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *AgentDiskInfo) GetMountPoint() string {
	if x != nil {
		return x.MountPoint
	}
	return ""
}

func (x *AgentDiskInfo) GetFstype() string {
	if x != nil {
		return x.Fstype
	}
	return ""
}

func (x *AgentDiskInfo) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *AgentDiskInfo) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AgentDiskInfo) GetUsedPercent() float64 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

//agent所在主机的端口信息
type AgentPortInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortType             string                `protobuf:"bytes,1,opt,name=port_type,json=portType,proto3" json:"port_type,omitempty"`                                         //端口类型
	Port                 int64                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                                                                //端口号
	PortStatus           string                `protobuf:"bytes,3,opt,name=port_status,json=portStatus,proto3" json:"port_status,omitempty"`                                   //端口状态
	PortService          string                `protobuf:"bytes,4,opt,name=port_service,json=portService,proto3" json:"port_service,omitempty"`                                //端口服务
	AgentPortProcessInfo *AgentPortPrecessInfo `protobuf:"bytes,5,opt,name=agent_port_process_info,json=agentPortProcessInfo,proto3" json:"agent_port_process_info,omitempty"` //端口pid信息
}

func (x *AgentPortInfo) Reset() {
	*x = AgentPortInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_collect_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPortInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPortInfo) ProtoMessage() {}

func (x *AgentPortInfo) ProtoReflect() protoreflect.Message {
	mi := &file_collect_collect_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPortInfo.ProtoReflect.Descriptor instead.
func (*AgentPortInfo) Descriptor() ([]byte, []int) {
	return file_collect_collect_proto_rawDescGZIP(), []int{3}
}

func (x *AgentPortInfo) GetPortType() string {
	if x != nil {
		return x.PortType
	}
	return ""
}

func (x *AgentPortInfo) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *AgentPortInfo) GetPortStatus() string {
	if x != nil {
		return x.PortStatus
	}
	return ""
}

func (x *AgentPortInfo) GetPortService() string {
	if x != nil {
		return x.PortService
	}
	return ""
}

func (x *AgentPortInfo) GetAgentPortProcessInfo() *AgentPortPrecessInfo {
	if x != nil {
		return x.AgentPortProcessInfo
	}
	return nil
}

//agent所在主机的端口的进程信息
type AgentPortPrecessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid           int64   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`                                           //进程ID
	CpuPercent    float64 `protobuf:"fixed64,2,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`          //进程所使用cpu时间的百分比
	Cmdline       string  `protobuf:"bytes,3,opt,name=cmdline,proto3" json:"cmdline,omitempty"`                                    //运行进程所使用的命令
	CreateTime    int64   `protobuf:"varint,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`           //进程创建时间
	Cwd           string  `protobuf:"bytes,5,opt,name=cwd,proto3" json:"cwd,omitempty"`                                            //进程当前工作目录
	MemoryPercent float32 `protobuf:"fixed32,6,opt,name=memory_percent,json=memoryPercent,proto3" json:"memory_percent,omitempty"` //进程使用内存的百分比
	Username      string  `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`                                  //进程所属用户
}

func (x *AgentPortPrecessInfo) Reset() {
	*x = AgentPortPrecessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_collect_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentPortPrecessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPortPrecessInfo) ProtoMessage() {}

func (x *AgentPortPrecessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_collect_collect_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPortPrecessInfo.ProtoReflect.Descriptor instead.
func (*AgentPortPrecessInfo) Descriptor() ([]byte, []int) {
	return file_collect_collect_proto_rawDescGZIP(), []int{4}
}

func (x *AgentPortPrecessInfo) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *AgentPortPrecessInfo) GetCpuPercent() float64 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *AgentPortPrecessInfo) GetCmdline() string {
	if x != nil {
		return x.Cmdline
	}
	return ""
}

func (x *AgentPortPrecessInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AgentPortPrecessInfo) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *AgentPortPrecessInfo) GetMemoryPercent() float32 {
	if x != nil {
		return x.MemoryPercent
	}
	return 0
}

func (x *AgentPortPrecessInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CollectAgentBasicInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //响应码
}

func (x *CollectAgentBasicInfoResp) Reset() {
	*x = CollectAgentBasicInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_collect_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectAgentBasicInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectAgentBasicInfoResp) ProtoMessage() {}

func (x *CollectAgentBasicInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_collect_collect_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectAgentBasicInfoResp.ProtoReflect.Descriptor instead.
func (*CollectAgentBasicInfoResp) Descriptor() ([]byte, []int) {
	return file_collect_collect_proto_rawDescGZIP(), []int{5}
}

func (x *CollectAgentBasicInfoResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type CollectAgentCisScanResultReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId   string           `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	StartTime int64            `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Results   []*CisScanResult `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *CollectAgentCisScanResultReq) Reset() {
	*x = CollectAgentCisScanResultReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_collect_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectAgentCisScanResultReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectAgentCisScanResultReq) ProtoMessage() {}

func (x *CollectAgentCisScanResultReq) ProtoReflect() protoreflect.Message {
	mi := &file_collect_collect_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectAgentCisScanResultReq.ProtoReflect.Descriptor instead.
func (*CollectAgentCisScanResultReq) Descriptor() ([]byte, []int) {
	return file_collect_collect_proto_rawDescGZIP(), []int{6}
}

func (x *CollectAgentCisScanResultReq) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *CollectAgentCisScanResultReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CollectAgentCisScanResultReq) GetResults() []*CisScanResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type CisScanResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CisId  string `protobuf:"bytes,1,opt,name=cis_id,json=cisId,proto3" json:"cis_id,omitempty"` //cis Id
	Status bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`           //检测状态
}

func (x *CisScanResult) Reset() {
	*x = CisScanResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_collect_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CisScanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CisScanResult) ProtoMessage() {}

func (x *CisScanResult) ProtoReflect() protoreflect.Message {
	mi := &file_collect_collect_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CisScanResult.ProtoReflect.Descriptor instead.
func (*CisScanResult) Descriptor() ([]byte, []int) {
	return file_collect_collect_proto_rawDescGZIP(), []int{7}
}

func (x *CisScanResult) GetCisId() string {
	if x != nil {
		return x.CisId
	}
	return ""
}

func (x *CisScanResult) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CollectAgentCisScanResultResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` //响应码
}

func (x *CollectAgentCisScanResultResp) Reset() {
	*x = CollectAgentCisScanResultResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_collect_collect_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectAgentCisScanResultResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectAgentCisScanResultResp) ProtoMessage() {}

func (x *CollectAgentCisScanResultResp) ProtoReflect() protoreflect.Message {
	mi := &file_collect_collect_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectAgentCisScanResultResp.ProtoReflect.Descriptor instead.
func (*CollectAgentCisScanResultResp) Descriptor() ([]byte, []int) {
	return file_collect_collect_proto_rawDescGZIP(), []int{8}
}

func (x *CollectAgentCisScanResultResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_collect_collect_proto protoreflect.FileDescriptor

var file_collect_collect_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x22, 0xd5, 0x02, 0x0a, 0x18, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x3e, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x6b,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x44, 0x0a, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x70, 0x75, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x72,
	0x65, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x72,
	0x65, 0x43, 0x70, 0x75, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x22, 0xda, 0x01, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x17, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x65, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd9, 0x01,
	0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x65, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63,
	0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6d, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x77, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x77, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x19, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x1c, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x73, 0x53, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x2e, 0x43, 0x69, 0x73, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x3e, 0x0a, 0x0d, 0x43, 0x69, 0x73, 0x53, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x69, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x69, 0x73, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x1d, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x73, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0xdb, 0x01, 0x0a,
	0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x62, 0x0a, 0x15, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x28, 0x01, 0x12, 0x6c, 0x0a, 0x19,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x73, 0x53,
	0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x69, 0x73, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x69, 0x73, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x6e, 0x61,
	0x73, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_collect_collect_proto_rawDescOnce sync.Once
	file_collect_collect_proto_rawDescData = file_collect_collect_proto_rawDesc
)

func file_collect_collect_proto_rawDescGZIP() []byte {
	file_collect_collect_proto_rawDescOnce.Do(func() {
		file_collect_collect_proto_rawDescData = protoimpl.X.CompressGZIP(file_collect_collect_proto_rawDescData)
	})
	return file_collect_collect_proto_rawDescData
}

var file_collect_collect_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_collect_collect_proto_goTypes = []interface{}{
	(*CollectAgentBasicInfoReq)(nil),      // 0: collect.CollectAgentBasicInfoReq
	(*AgentSystemInfo)(nil),               // 1: collect.AgentSystemInfo
	(*AgentDiskInfo)(nil),                 // 2: collect.AgentDiskInfo
	(*AgentPortInfo)(nil),                 // 3: collect.AgentPortInfo
	(*AgentPortPrecessInfo)(nil),          // 4: collect.AgentPortPrecessInfo
	(*CollectAgentBasicInfoResp)(nil),     // 5: collect.CollectAgentBasicInfoResp
	(*CollectAgentCisScanResultReq)(nil),  // 6: collect.CollectAgentCisScanResultReq
	(*CisScanResult)(nil),                 // 7: collect.CisScanResult
	(*CollectAgentCisScanResultResp)(nil), // 8: collect.CollectAgentCisScanResultResp
}
var file_collect_collect_proto_depIdxs = []int32{
	2, // 0: collect.CollectAgentBasicInfoReq.agent_disk_info:type_name -> collect.AgentDiskInfo
	1, // 1: collect.CollectAgentBasicInfoReq.agent_system_info:type_name -> collect.AgentSystemInfo
	3, // 2: collect.CollectAgentBasicInfoReq.agent_port_info:type_name -> collect.AgentPortInfo
	4, // 3: collect.AgentPortInfo.agent_port_process_info:type_name -> collect.AgentPortPrecessInfo
	7, // 4: collect.CollectAgentCisScanResultReq.results:type_name -> collect.CisScanResult
	0, // 5: collect.Collect.CollectAgentBasicInfo:input_type -> collect.CollectAgentBasicInfoReq
	6, // 6: collect.Collect.CollectAgentCisScanResult:input_type -> collect.CollectAgentCisScanResultReq
	5, // 7: collect.Collect.CollectAgentBasicInfo:output_type -> collect.CollectAgentBasicInfoResp
	8, // 8: collect.Collect.CollectAgentCisScanResult:output_type -> collect.CollectAgentCisScanResultResp
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_collect_collect_proto_init() }
func file_collect_collect_proto_init() {
	if File_collect_collect_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_collect_collect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectAgentBasicInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_collect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentSystemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_collect_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDiskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_collect_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPortInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_collect_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentPortPrecessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_collect_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectAgentBasicInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_collect_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectAgentCisScanResultReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_collect_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CisScanResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_collect_collect_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectAgentCisScanResultResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_collect_collect_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_collect_collect_proto_goTypes,
		DependencyIndexes: file_collect_collect_proto_depIdxs,
		MessageInfos:      file_collect_collect_proto_msgTypes,
	}.Build()
	File_collect_collect_proto = out.File
	file_collect_collect_proto_rawDesc = nil
	file_collect_collect_proto_goTypes = nil
	file_collect_collect_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CollectClient is the client API for Collect service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectClient interface {
	//收集agent主动上报上来的基本信息
	CollectAgentBasicInfo(ctx context.Context, opts ...grpc.CallOption) (Collect_CollectAgentBasicInfoClient, error)
	//收集agent主动上报上来的基线扫描结果
	CollectAgentCisScanResult(ctx context.Context, in *CollectAgentCisScanResultReq, opts ...grpc.CallOption) (*CollectAgentCisScanResultResp, error)
}

type collectClient struct {
	cc grpc.ClientConnInterface
}

func NewCollectClient(cc grpc.ClientConnInterface) CollectClient {
	return &collectClient{cc}
}

func (c *collectClient) CollectAgentBasicInfo(ctx context.Context, opts ...grpc.CallOption) (Collect_CollectAgentBasicInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Collect_serviceDesc.Streams[0], "/collect.Collect/CollectAgentBasicInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &collectCollectAgentBasicInfoClient{stream}
	return x, nil
}

type Collect_CollectAgentBasicInfoClient interface {
	Send(*CollectAgentBasicInfoReq) error
	CloseAndRecv() (*CollectAgentBasicInfoResp, error)
	grpc.ClientStream
}

type collectCollectAgentBasicInfoClient struct {
	grpc.ClientStream
}

func (x *collectCollectAgentBasicInfoClient) Send(m *CollectAgentBasicInfoReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *collectCollectAgentBasicInfoClient) CloseAndRecv() (*CollectAgentBasicInfoResp, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CollectAgentBasicInfoResp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *collectClient) CollectAgentCisScanResult(ctx context.Context, in *CollectAgentCisScanResultReq, opts ...grpc.CallOption) (*CollectAgentCisScanResultResp, error) {
	out := new(CollectAgentCisScanResultResp)
	err := c.cc.Invoke(ctx, "/collect.Collect/CollectAgentCisScanResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectServer is the server API for Collect service.
type CollectServer interface {
	//收集agent主动上报上来的基本信息
	CollectAgentBasicInfo(Collect_CollectAgentBasicInfoServer) error
	//收集agent主动上报上来的基线扫描结果
	CollectAgentCisScanResult(context.Context, *CollectAgentCisScanResultReq) (*CollectAgentCisScanResultResp, error)
}

// UnimplementedCollectServer can be embedded to have forward compatible implementations.
type UnimplementedCollectServer struct {
}

func (*UnimplementedCollectServer) CollectAgentBasicInfo(Collect_CollectAgentBasicInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method CollectAgentBasicInfo not implemented")
}
func (*UnimplementedCollectServer) CollectAgentCisScanResult(context.Context, *CollectAgentCisScanResultReq) (*CollectAgentCisScanResultResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CollectAgentCisScanResult not implemented")
}

func RegisterCollectServer(s *grpc.Server, srv CollectServer) {
	s.RegisterService(&_Collect_serviceDesc, srv)
}

func _Collect_CollectAgentBasicInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CollectServer).CollectAgentBasicInfo(&collectCollectAgentBasicInfoServer{stream})
}

type Collect_CollectAgentBasicInfoServer interface {
	SendAndClose(*CollectAgentBasicInfoResp) error
	Recv() (*CollectAgentBasicInfoReq, error)
	grpc.ServerStream
}

type collectCollectAgentBasicInfoServer struct {
	grpc.ServerStream
}

func (x *collectCollectAgentBasicInfoServer) SendAndClose(m *CollectAgentBasicInfoResp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *collectCollectAgentBasicInfoServer) Recv() (*CollectAgentBasicInfoReq, error) {
	m := new(CollectAgentBasicInfoReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Collect_CollectAgentCisScanResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollectAgentCisScanResultReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectServer).CollectAgentCisScanResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collect.Collect/CollectAgentCisScanResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectServer).CollectAgentCisScanResult(ctx, req.(*CollectAgentCisScanResultReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Collect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "collect.Collect",
	HandlerType: (*CollectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CollectAgentCisScanResult",
			Handler:    _Collect_CollectAgentCisScanResult_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CollectAgentBasicInfo",
			Handler:       _Collect_CollectAgentBasicInfo_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "collect/collect.proto",
}
